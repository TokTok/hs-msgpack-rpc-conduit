load("@rules_haskell//haskell:defs.bzl", "haskell_library")
load("//third_party/haskell/hspec-discover:build_defs.bzl", "hspec_test")
load("//tools/project:build_defs.bzl", "project")

project(
    custom_github = True,
    license = "hs-msgpack",
)

haskell_library(
    name = "hs-msgpack-rpc-conduit",
    srcs = glob(["src/**/*.*hs"]),
    compiler_flags = ["-Wno-unused-imports"],
    src_strip_prefix = "src",
    version = "0.0.8",
    visibility = ["//visibility:public"],
    deps = [
        "//hs-msgpack-binary",
        "//hs-msgpack-types",
        "//third_party/haskell:base",
        "//third_party/haskell:binary",
        "//third_party/haskell:binary-conduit",
        "//third_party/haskell:bytestring",
        "//third_party/haskell:conduit",
        "//third_party/haskell:conduit-extra",
        "//third_party/haskell:data-default-class",
        "//third_party/haskell:exceptions",
        "//third_party/haskell:monad-control",
        "//third_party/haskell:monad-validate",
        "//third_party/haskell:mtl",
        "//third_party/haskell:network",
        "//third_party/haskell:text",
        "//third_party/haskell:unliftio-core",
    ],
)

hspec_test(
    name = "testsuite",
    size = "small",
    compiler_flags = ["-Wno-unused-imports"],
    deps = [
        ":hs-msgpack-rpc-conduit",
        "//third_party/haskell:async",
        "//third_party/haskell:base",
        "//third_party/haskell:bytestring",
        "//third_party/haskell:hspec",
        "//third_party/haskell:mtl",
        "//third_party/haskell:network",
    ],
)
