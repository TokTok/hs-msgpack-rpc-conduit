load("@ai_formation_hazel//tools:mangling.bzl", "hazel_library")
load("@rules_haskell//haskell:defs.bzl", "haskell_library")
load("//third_party/haskell/hspec-discover:build_defs.bzl", "hspec_test")
load("//tools/project:build_defs.bzl", "project")

project(
    custom_github = True,
    license = "hs-msgpack",
)

haskell_library(
    name = "hs-msgpack-rpc-conduit",
    srcs = glob(["src/**/*.*hs"]),
    compiler_flags = ["-Wno-unused-imports"],
    src_strip_prefix = "src",
    version = "0.0.7",
    visibility = ["//visibility:public"],
    deps = [
        "//hs-msgpack-binary",
        "//hs-msgpack-types",
        hazel_library("base"),
        hazel_library("binary"),
        hazel_library("binary-conduit"),
        hazel_library("bytestring"),
        hazel_library("conduit"),
        hazel_library("conduit-extra"),
        hazel_library("data-default-class"),
        hazel_library("exceptions"),
        hazel_library("monad-control"),
        hazel_library("monad-validate"),
        hazel_library("mtl"),
        hazel_library("network"),
        hazel_library("text"),
        hazel_library("unliftio-core"),
    ],
)

hspec_test(
    name = "testsuite",
    size = "small",
    compiler_flags = ["-Wno-unused-imports"],
    deps = [
        ":hs-msgpack-rpc-conduit",
        hazel_library("async"),
        hazel_library("base"),
        hazel_library("bytestring"),
        hazel_library("hspec"),
        hazel_library("mtl"),
        hazel_library("network"),
    ],
)
